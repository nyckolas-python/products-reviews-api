version: "3.9"

services:
  web:
    container_name: flask_api_web
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
    build: .
    ports:
      - "5000:5000"
    command: honcho start
    volumes:
      - .:/app

    environment:
      DEBUG: 1
      SECRET_KEY: flask-insecure-x@(-n!hl89*_5@a&ug*2spzrwbc1rh=om_f8l=d@k8$mk1@fn5
      DB_HOST: postgres
      POSTGRES_DB: "flask_api_dev"
      POSTGRES_USER: "flask_api_dev"
      POSTGRES_PASSWORD: "pass"

  postgres:
    container_name: postgres_container
    image: postgres:13.8
    environment:
      POSTGRES_DB: "flask_api_dev"
      POSTGRES_USER: "flask_api_dev"
      POSTGRES_PASSWORD: "pass"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flask_api_dev -d flask_api_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  pgadmin:
    depends_on:
      postgres:
        condition: service_healthy
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.14
    environment:
      PGADMIN_DEFAULT_EMAIL: "flask_api_dev@example.com"
      PGADMIN_DEFAULT_PASSWORD: "flask_api_dev"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G


volumes:
  postgres_data: